"use strict";(self.webpackChunkadminify=self.webpackChunkadminify||[]).push([[6401],{6534:(n,t,e)=>{var i=e(538),o=e(8345),a=e(7757),s=e.n(a);function asyncGeneratorStep(n,t,e,i,o,a,s){try{var l=n[a](s),c=l.value}catch(n){return void e(n)}l.done?t(c):Promise.resolve(c).then(i,o)}function _asyncToGenerator(n){return function(){var t=this,e=arguments;return new Promise((function(i,o){var a=n.apply(t,e);function _next(n){asyncGeneratorStep(a,i,o,_next,_throw,"next",n)}function _throw(n){asyncGeneratorStep(a,i,o,_next,_throw,"throw",n)}_next(void 0)}))}}const l={data:function data(){return{loading:!1,post_types:[],post_type:null}},mounted:function mounted(){var n=this;return _asyncToGenerator(s().mark((function _callee(){return s().wrap((function _callee$(t){for(;;)switch(t.prev=t.next){case 0:return n.post_type=n.$route.params.post_type,t.next=3,n.load_post_type_data();case 3:!n.post_type&&n.post_types.length&&n.$router.push("/post-types/".concat(n.post_types[0].name));case 4:case"end":return t.stop()}}),_callee)})))()},methods:{load_post_type_data:function load_post_type_data(){var n=this;return _asyncToGenerator(s().mark((function _callee2(){return s().wrap((function _callee2$(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,n.$store.dispatch("get_post_types");case 2:n.post_types=t.sent;case 3:case"end":return t.stop()}}),_callee2)})))()},set_parent_data:function set_parent_data(){this.$parent.post_types=this.post_types}},watch:{post_types:{deep:!0,handler:function handler(){this.set_parent_data()}}}};var c=e(1900);const r=(0,c.Z)(l,(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"tab-pane",attrs:{id:"post-types"}},[e("div",{staticClass:"columns"},[e("div",{staticClass:"column is-4"},[e("div",{staticClass:"tabs is-boxed"},[e("ul",{staticClass:"nav-tabs is-flex is-flex-direction-column is-align-items-flex-start"},n._l(n.post_types,(function(t){return e("router-link",{key:t.name,attrs:{to:"/post-types/"+t.name,custom:"",exact:""},scopedSlots:n._u([{key:"default",fn:function(i){var o=i.navigate,a=i.isActive;return[e("li",{staticClass:"nav-item",class:[a&&"router-link-active"],attrs:{role:"link"},on:{click:o,keypress:function(t){return!t.type.indexOf("key")&&n._k(t.keyCode,"enter",13,t.key,"Enter")?null:o.apply(null,arguments)}}},[e("a",{staticClass:"nav-link is-clickable",class:[n.post_type==t.name&&"active"],attrs:{href:"javascript:void(0);"}},[e("span",{staticClass:"icon is-small"},[e("i",{staticClass:"dashicons dashicons-edit-page"})]),n._v(" "),e("span",[n._v(n._s(t.title))]),n._v(" "),!n.isPro()&&t.is_pro?e("span",{staticClass:"adminify-column-post--pro",staticStyle:{"margin-left":"4px"}},[n._v("- (Pro)")]):n._e()])])]}}],null,!0)})})),1)])]),n._v(" "),e("div",{staticClass:"column"},[e("div",{staticClass:"tab-content tab-panel pane"},[n.post_types.length?e("router-view",{key:n.$route.fullPath}):n._e()],1)])])])}),[],!1,null,null,null).exports;var d=e(6555),u=e.n(d),p=e(9980),m=e.n(p);e(6689);const v={data:function data(){return{post_type:{},current:null,current_column:{},drag:!1}},components:{RangeSlider:u(),draggable:m()},mounted:function mounted(){this.current=this.$route.params.post_type,this.post_type=this.$store.getters.post_type_by_name(this.current)},computed:{dragOptions:function dragOptions(){return{animation:150,group:"description",disabled:!this.isTypePro(),ghostClass:"ghost"}},fieldTypeKeys:function fieldTypeKeys(){var n=this.post_type.fields.find((function(n){return"type"==n.id})).options,t=this.groupToOptions(n);return Object.keys(t)},displayColumnKeys:function displayColumnKeys(){return this.post_type.display_columns.map((function(n){return n.name}))}},methods:{groupToOptions:function groupToOptions(n){var t={};return n.forEach((function(n){n.group?t=jQuery.extend({},t,n.options):t[n.name]=n.title})),t},isTypePro:function isTypePro(){return!!this.isPro()||!this.post_type.is_pro},editing:function editing(n){this.isTypePro()&&(this.current_column=this.nonReactive(n))},onSliderUnitChange:function onSliderUnitChange(n){if(this.isTypePro()){var t=this.getWidthMax(n.width.unit);n.width.value>t&&(n.width.value=t)}},formatedWidthValue:function formatedWidthValue(n){return 0==n?"auto":n},getWidthMax:function getWidthMax(n){return"%"==n?100:1e3},toggleAccordion:function toggleAccordion(n,t){if(this.isTypePro()){var e=jQuery(n.target).closest(".admin-column-accordion").toggleClass("admin-column-accordion--open"),i=e.find(".accordion-body");e.hasClass("admin-column-accordion--open")?i.slideDown(200,(function(){t.forceOpen=!0})):i.slideUp(200,(function(){e.removeClass("admin-column-accordion-force--open"),delete t.forceOpen}))}},removeColumn:function removeColumn(n){if(this.isTypePro()){var t=jQuery(n.target).closest(".admin-column-accordion").index();t>-1&&this.post_type.display_columns.splice(t,1)}},hasAddedAllFields:function hasAddedAllFields(){var n=this;return this.fieldTypeKeys.every((function(t){return n.displayColumnKeys.includes(t)}))},columnsExtraCheck:function columnsExtraCheck(){return{function:"function_name",shortcode:"shortcode_name"}},changedType:function changedType(n){if(this.isTypePro()){var t=this.columnsExtraCheck(),e=this.post_type.display_columns.filter((function(e){if(e.name in t){var i=t[e.name];return n.name==e.name&&i in n&&i in e&&n[i]==e[i]}return n.name==e.name}));if(e.length>1){if(n.name in t){var i=t[n.name];n[i]=""}else n.name=this.current_column.name;this.showError({title:"Can't change the column!",content:"This field is already in use, you can't use it twice"})}}},getNonAddedColumnKeys:function getNonAddedColumnKeys(){var n=this;return this.fieldTypeKeys.filter((function(t){return!n.displayColumnKeys.includes(t)}))},getNewDefaults:function getNewDefaults(n){if(this.isTypePro())return{forceOpen:!0,label:this.post_type.columns[n],name:n,width:{unit:"%",value:"auto"}}},showError:function showError(n){Window.Events.$emit("AdminColumnsError",n)},getAddableColumnKeys:function getAddableColumnKeys(){var n=Object.keys(this.columnsExtraCheck());return this.getNonAddedColumnKeys().filter((function(t){return!n.includes(t)})).concat(n)},addNewColumn:function addNewColumn(){this.isTypePro()&&this.post_type.display_columns.push(this.getNewDefaults(this.getAddableColumnKeys()[0]))},cloneColumn:function cloneColumn(n){if(this.isTypePro()){var t=n.name;t in this.columnsExtraCheck()||(t=this.getAddableColumnKeys()[0]);var e=this.getNewDefaults(t);e.width=this.nonReactive(n.width),this.post_type.display_columns.push(e)}}}},f=v;var y=e(3379),h=e.n(y),_=e(1332),g={insert:"head",singleton:!1};h()(_.Z,g);_.Z.locals;const C=(0,c.Z)(f,(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"tab-pane",attrs:{id:n.post_type.name}},[e("draggable",n._b({on:{start:function(t){n.drag=!0},end:function(t){n.drag=!1}},model:{value:n.post_type.display_columns,callback:function(t){n.$set(n.post_type,"display_columns",t)},expression:"post_type.display_columns"}},"draggable",n.dragOptions,!1),n._l(n.post_type.display_columns,(function(t,i){return e("div",{key:t.name+i,ref:"accordion",refInFor:!0,staticClass:"admin-column-accordion",class:t.forceOpen&&"admin-column-accordion-force--open admin-column-accordion--open"},[e("div",{staticClass:"accordion-title p-4 pr-6 mr-6"},[e("svg",{staticClass:"drag-icon is-pulled-left is-clickable mr-2",attrs:{width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M12 7C13.1046 7 14 6.10457 14 5C14 3.89543 13.1046 3 12 3C10.8954 3 10 3.89543 10 5C10 6.10457 10.8954 7 12 7Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M12 21C13.1046 21 14 20.1046 14 19C14 17.8954 13.1046 17 12 17C10.8954 17 10 17.8954 10 19C10 20.1046 10.8954 21 12 21Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M5 14C6.10457 14 7 13.1046 7 12C7 10.8954 6.10457 10 5 10C3.89543 10 3 10.8954 3 12C3 13.1046 3.89543 14 5 14Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M5 7C6.10457 7 7 6.10457 7 5C7 3.89543 6.10457 3 5 3C3.89543 3 3 3.89543 3 5C3 6.10457 3.89543 7 5 7Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M5 21C6.10457 21 7 20.1046 7 19C7 17.8954 6.10457 17 5 17C3.89543 17 3 17.8954 3 19C3 20.1046 3.89543 21 5 21Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M19 14C20.1046 14 21 13.1046 21 12C21 10.8954 20.1046 10 19 10C17.8954 10 17 10.8954 17 12C17 13.1046 17.8954 14 19 14Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M19 7C20.1046 7 21 6.10457 21 5C21 3.89543 20.1046 3 19 3C17.8954 3 17 3.89543 17 5C17 6.10457 17.8954 7 19 7Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M19 21C20.1046 21 21 20.1046 21 19C21 17.8954 20.1046 17 19 17C17.8954 17 17 17.8954 17 19C17 20.1046 17.8954 21 19 21Z",fill:"#4E4B66","fill-opacity":"0.72"}})]),n._v(" "),e("div",{staticClass:"accordion-type-title"},[e("span",{staticClass:"admin-column-name",domProps:{innerHTML:n._s(t.label)}}),n._v(" "),e("div",{staticClass:"accordion-actions"},[e("a",{staticClass:"edit-button",attrs:{href:"#"},on:{click:function(e){return e.preventDefault(),n.toggleAccordion(e,t)}}},[n._v("Edit")]),n._v(" "),e("a",{staticClass:"remove-button",attrs:{href:"#"},on:{click:function(t){return t.preventDefault(),n.removeColumn.apply(null,arguments)}}},[n._v("Remove")])]),n._v(" "),e("span",{staticClass:"accordion-type is-pulled-right"},[n._v(n._s(n.post_type.title))])]),n._v(" "),e("div",{staticClass:"accordion-helper"},[e("button",{staticClass:"helper-button accordion-clone",on:{click:function(e){return n.cloneColumn(t)}}},[e("i",{staticClass:"ti-layers"})]),n._v(" "),e("button",{staticClass:"helper-button accordion-remove",on:{click:n.removeColumn}},[e("i",{staticClass:"ti-close"})]),n._v(" "),e("button",{staticClass:"helper-button accordion-toggler"},[e("i",{staticClass:"ti-angle-down"})])])]),n._v(" "),e("div",{staticClass:"accordion-opener",on:{click:function(e){return n.toggleAccordion(e,t)}}}),n._v(" "),e("div",{staticClass:"accordion-body"},[n._l(n.post_type.fields,(function(o,a){return["type"==o.id?e("div",{key:a,staticClass:"inner-content content-type"},[e("div",{staticClass:"columns"},[e("div",{staticClass:"column is-4"},[e("label",{attrs:{for:"content-"+i+"-"+t.name+"-"+o.id}},[n._v(n._s(o.title))])]),n._v(" "),e("div",{staticClass:"column"},[e("select",{directives:[{name:"model",rawName:"v-model",value:t.name,expression:"column.name"}],staticClass:"select-type",attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,placeholder:o.placeholder},on:{focus:function(e){return n.editing(t)},change:[function(e){var i=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){return"_value"in n?n._value:n.value}));n.$set(t,"name",e.target.multiple?i:i[0])},function(e){return n.changedType(t)}]}},[n._l(o.options,(function(i,o){return[i.group?e("optgroup",{key:o,attrs:{label:i.group}},n._l(i.options,(function(i,o){return e("option",{key:o,domProps:{value:o,selected:o==t.name}},[n._v(n._s(i))])})),0):e("option",{key:i.name,domProps:{value:i.name,selected:i.name==t.name}},[n._v(n._s(i.title))])]}))],2)])])]):n._e(),n._v(" "),"function_name"==o.id&&"function"==t.name?e("div",{key:a,staticClass:"inner-content content-type"},[e("div",{staticClass:"columns"},[e("div",{staticClass:"column is-4"},[e("label",{attrs:{for:"content-"+i+"-"+t.name+"-"+o.id}},[n._v(n._s(o.title))])]),n._v(" "),e("div",{staticClass:"column"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.function_name,expression:"column.function_name"}],attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,type:"text",placeholder:o.placeholder},domProps:{value:t.function_name},on:{change:function(e){return n.changedType(t)},input:function(e){e.target.composing||n.$set(t,"function_name",e.target.value)}}})])])]):n._e(),n._v(" "),"shortcode_name"==o.id&&"shortcode"==t.name?e("div",{key:a,staticClass:"inner-content content-type"},[e("div",{staticClass:"columns"},[e("div",{staticClass:"column is-4"},[e("label",{attrs:{for:"content-"+i+"-"+t.name+"-"+o.id}},[n._v(n._s(o.title))])]),n._v(" "),e("div",{staticClass:"column"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.shortcode_name,expression:"column.shortcode_name"}],attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,type:"text",placeholder:o.placeholder},domProps:{value:t.shortcode_name},on:{change:function(e){return n.changedType(t)},input:function(e){e.target.composing||n.$set(t,"shortcode_name",e.target.value)}}})])])]):n._e(),n._v(" "),"label"==o.id?e("div",{key:a,staticClass:"inner-content content-type"},[e("div",{staticClass:"columns"},[e("div",{staticClass:"column is-4"},[e("label",{attrs:{for:"content-"+i+"-"+t.name+"-"+o.id}},[n._v(n._s(o.title))])]),n._v(" "),e("div",{staticClass:"column"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.label,expression:"column.label"}],attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,type:"text",placeholder:o.placeholder},domProps:{value:t.label},on:{input:function(e){e.target.composing||n.$set(t,"label",e.target.value)}}})])])]):n._e(),n._v(" "),"width"==o.id?e("div",{key:a,staticClass:"inner-content content-type"},[e("div",{staticClass:"columns"},[e("div",{staticClass:"column is-4"},[e("label",{attrs:{for:"content-"+i+"-"+t.name+"-"+o.id}},[n._v(n._s(o.title))])]),n._v(" "),e("div",{staticClass:"column"},[e("div",{staticClass:"range-slider-wrapper"},[e("input",{staticClass:"range-value",attrs:{type:"text",readonly:""},domProps:{value:n.formatedWidthValue(t.width.value)}}),n._v(" "),e("range-slider",{staticClass:"slider",attrs:{min:0,max:n.getWidthMax(t.width.unit)},model:{value:t.width.value,callback:function(e){n.$set(t.width,"value",e)},expression:"column.width.value"}})],1),n._v(" "),e("div",{staticClass:"unit-labels"},[e("label",{staticClass:"range-width-unit"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.width.unit,expression:"column.width.unit"}],staticClass:"range-width-unit-%",attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,type:"radio",value:"%"},domProps:{checked:"%"==t.width.unit,checked:n._q(t.width.unit,"%")},on:{change:[function(e){return n.$set(t.width,"unit","%")},function(e){return n.onSliderUnitChange(t)}]}}),n._v("%\n                                    ")]),n._v(" "),e("label",{staticClass:"range-width-unit"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.width.unit,expression:"column.width.unit"}],staticClass:"range-width-unit-px",attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,type:"radio",value:"px"},domProps:{checked:"px"==t.width.unit,checked:n._q(t.width.unit,"px")},on:{change:[function(e){return n.$set(t.width,"unit","px")},function(e){return n.onSliderUnitChange(t)}]}}),n._v("px\n                                    ")])])])])]):n._e()]}))],2)])})),0),n._v(" "),e("div",{staticClass:"columns is-desktop is-justify-content-flex-end"},[e("button",{staticClass:"wp-adminify-add-button is-clickable is-pulled-right",on:{click:n.addNewColumn}},[n._v("Add new")])]),n._v(" "),n.isTypePro()?n._e():e("div",{staticClass:"admin-column--pro-guard",domProps:{innerHTML:n._s(n.proNotice())}})],1)}),[],!1,null,null,null).exports;function taxonomiesvue_type_script_lang_js_asyncGeneratorStep(n,t,e,i,o,a,s){try{var l=n[a](s),c=l.value}catch(n){return void e(n)}l.done?t(c):Promise.resolve(c).then(i,o)}function taxonomiesvue_type_script_lang_js_asyncToGenerator(n){return function(){var t=this,e=arguments;return new Promise((function(i,o){var a=n.apply(t,e);function _next(n){taxonomiesvue_type_script_lang_js_asyncGeneratorStep(a,i,o,_next,_throw,"next",n)}function _throw(n){taxonomiesvue_type_script_lang_js_asyncGeneratorStep(a,i,o,_next,_throw,"throw",n)}_next(void 0)}))}}const x={data:function data(){return{loading:!1,taxonomies:[],taxonomy:null}},mounted:function mounted(){var n=this;return taxonomiesvue_type_script_lang_js_asyncToGenerator(s().mark((function _callee(){return s().wrap((function _callee$(t){for(;;)switch(t.prev=t.next){case 0:return n.taxonomy=n.$route.params.taxonomy,t.next=3,n.load_taxonomy_data();case 3:!n.taxonomy&&n.taxonomies.length&&n.$router.push("/taxonomies/".concat(n.taxonomies[0].name));case 4:case"end":return t.stop()}}),_callee)})))()},methods:{load_taxonomy_data:function load_taxonomy_data(){var n=this;return taxonomiesvue_type_script_lang_js_asyncToGenerator(s().mark((function _callee2(){return s().wrap((function _callee2$(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,n.$store.dispatch("get_taxonomies");case 2:n.taxonomies=t.sent;case 3:case"end":return t.stop()}}),_callee2)})))()},set_parent_data:function set_parent_data(){this.$parent.taxonomies=this.taxonomies}},watch:{taxonomies:{deep:!0,handler:function handler(){this.set_parent_data()}}}};var w=e(9015),b={insert:"head",singleton:!1};h()(w.Z,b);w.Z.locals;const k=(0,c.Z)(x,(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"tab-pane",attrs:{id:"taxonomies"}},[e("div",{staticClass:"columns"},[e("div",{staticClass:"column is-4"},[e("div",{staticClass:"tabs is-boxed"},[e("ul",{staticClass:"nav-tabs is-flex is-flex-direction-column is-align-items-flex-start"},n._l(n.taxonomies,(function(t){return e("router-link",{key:t.name,attrs:{to:"/taxonomies/"+t.name,custom:"",exact:""},scopedSlots:n._u([{key:"default",fn:function(i){var o=i.navigate,a=i.isActive;return[e("li",{staticClass:"nav-item",class:[a&&"router-link-active"],attrs:{role:"link"},on:{click:o,keypress:function(t){return!t.type.indexOf("key")&&n._k(t.keyCode,"enter",13,t.key,"Enter")?null:o.apply(null,arguments)}}},[e("a",{staticClass:"nav-link is-clickable",class:[n.taxonomy==t.name&&"active"],attrs:{href:"javascript:void(0);"}},[e("span",{staticClass:"icon is-small"},[e("i",{staticClass:"dashicons dashicons-edit-page"})]),n._v(" "),e("span",[n._v(n._s(t.title))]),n._v(" "),!n.isPro()&&t.is_pro?e("span",{staticClass:"adminify-column-post--pro",staticStyle:{"margin-left":"4px"}},[n._v("- (Pro)")]):n._e(),n._v(" "),t.object_type?e("span",{staticClass:"taxonomy-post-type"},[n._v("["+n._s(t.object_type)+"]")]):n._e()])])]}}],null,!0)})})),1)])]),n._v(" "),e("div",{staticClass:"column"},[e("div",{staticClass:"tab-content tab-panel pane"},[n.taxonomies.length?e("router-view",{key:n.$route.fullPath}):n._e()],1)])])])}),[],!1,null,null,null).exports;const A={data:function data(){return{taxonomy:{},current:null,current_column:{},drag:!1}},components:{RangeSlider:u(),draggable:m()},mounted:function mounted(){this.current=this.$route.params.taxonomy,this.taxonomy=this.$store.getters.taxonomy_by_name(this.current)},computed:{dragOptions:function dragOptions(){return{animation:150,group:"description",disabled:!this.isTaxPro(),ghostClass:"ghost"}},fieldTypeKeys:function fieldTypeKeys(){return Object.keys(this.taxonomy.fields.find((function(n){return"type"==n.id})).options)},displayColumnKeys:function displayColumnKeys(){return this.taxonomy.display_columns.map((function(n){return n.name}))}},methods:{isTaxPro:function isTaxPro(){return!!this.isPro()||!this.taxonomy.is_pro},editing:function editing(n){this.isTaxPro()&&(this.current_column=this.nonReactive(n))},changedType:function changedType(n){if(this.isTaxPro()&&this.displayColumnKeys.filter((function(t){return t==n.name})).length>1){var t=jQuery(this.taxonomy.columns[n.name]).text();t||(t=this.taxonomy.columns[n.name]),this.current_column.name&&(n.name=this.current_column.name),this.showError({title:"Can't change the column!",content:"".concat(t," is already in use, you can't use it twice")})}},onSliderUnitChange:function onSliderUnitChange(n){if(this.isTaxPro()){var t=this.getWidthMax(n.width.unit);n.width.value>t&&(n.width.value=t)}},formatedWidthValue:function formatedWidthValue(n){return 0==n?"auto":n},getWidthMax:function getWidthMax(n){return"%"==n?100:1e3},toggleAccordion:function toggleAccordion(n,t){if(this.isTaxPro()){var e=jQuery(n.target).closest(".admin-column-accordion").toggleClass("admin-column-accordion--open"),i=e.find(".accordion-body");e.hasClass("admin-column-accordion--open")?i.slideDown(200,(function(){t.forceOpen=!0})):i.slideUp(200,(function(){e.removeClass("admin-column-accordion-force--open"),delete t.forceOpen}))}},removeColumn:function removeColumn(n){if(this.isTaxPro()){var t=jQuery(n.target).closest(".admin-column-accordion").index();t>-1&&this.taxonomy.display_columns.splice(t,1)}},hasAddedAllFields:function hasAddedAllFields(){var n=this;return this.fieldTypeKeys.every((function(t){return n.displayColumnKeys.includes(t)}))},getNonAddedFieldKeys:function getNonAddedFieldKeys(){var n=this;return this.fieldTypeKeys.filter((function(t){return!n.displayColumnKeys.includes(t)}))},getNewDefaults:function getNewDefaults(n){if(this.isTaxPro())return{forceOpen:!0,fields:["type","label","width"],label:this.taxonomy.columns[n],name:n,width:{unit:"%",value:"auto"}}},showError:function showError(n){Window.Events.$emit("AdminColumnsError",n)},addNewColumn:function addNewColumn(){if(this.isTaxPro()){if(this.hasAddedAllFields())return this.showError({title:"Can't add new column!",content:"All columns are added, you can't add new column"});var n=this.getNonAddedFieldKeys()[0],t=this.getNewDefaults(n);this.taxonomy.display_columns.push(t)}},cloneColumn:function cloneColumn(n){if(this.isTaxPro()){if(this.hasAddedAllFields())return this.showError({title:"Can't clone column!",content:"All columns are added, you can't add new column"});var t=this.getNonAddedFieldKeys()[0],e=this.getNewDefaults(t);e.width=this.nonReactive(n.width),this.taxonomy.display_columns.push(e)}}}};var $=e(655),T={insert:"head",singleton:!1};h()($.Z,T);$.Z.locals;const E=(0,c.Z)(A,(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"tab-pane",attrs:{id:n.taxonomy.name}},[e("draggable",n._b({on:{start:function(t){n.drag=!0},end:function(t){n.drag=!1}},model:{value:n.taxonomy.display_columns,callback:function(t){n.$set(n.taxonomy,"display_columns",t)},expression:"taxonomy.display_columns"}},"draggable",n.dragOptions,!1),n._l(n.taxonomy.display_columns,(function(t,i){return e("div",{key:t.name+i,ref:"accordion",refInFor:!0,staticClass:"admin-column-accordion",class:t.forceOpen&&"admin-column-accordion-force--open admin-column-accordion--open"},[e("div",{staticClass:"accordion-title p-4 pr-6 mr-6"},[e("svg",{staticClass:"drag-icon is-pulled-left is-clickable mr-2",attrs:{width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M12 7C13.1046 7 14 6.10457 14 5C14 3.89543 13.1046 3 12 3C10.8954 3 10 3.89543 10 5C10 6.10457 10.8954 7 12 7Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M12 21C13.1046 21 14 20.1046 14 19C14 17.8954 13.1046 17 12 17C10.8954 17 10 17.8954 10 19C10 20.1046 10.8954 21 12 21Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M5 14C6.10457 14 7 13.1046 7 12C7 10.8954 6.10457 10 5 10C3.89543 10 3 10.8954 3 12C3 13.1046 3.89543 14 5 14Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M5 7C6.10457 7 7 6.10457 7 5C7 3.89543 6.10457 3 5 3C3.89543 3 3 3.89543 3 5C3 6.10457 3.89543 7 5 7Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M5 21C6.10457 21 7 20.1046 7 19C7 17.8954 6.10457 17 5 17C3.89543 17 3 17.8954 3 19C3 20.1046 3.89543 21 5 21Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M19 14C20.1046 14 21 13.1046 21 12C21 10.8954 20.1046 10 19 10C17.8954 10 17 10.8954 17 12C17 13.1046 17.8954 14 19 14Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M19 7C20.1046 7 21 6.10457 21 5C21 3.89543 20.1046 3 19 3C17.8954 3 17 3.89543 17 5C17 6.10457 17.8954 7 19 7Z",fill:"#4E4B66","fill-opacity":"0.72"}}),n._v(" "),e("path",{attrs:{d:"M19 21C20.1046 21 21 20.1046 21 19C21 17.8954 20.1046 17 19 17C17.8954 17 17 17.8954 17 19C17 20.1046 17.8954 21 19 21Z",fill:"#4E4B66","fill-opacity":"0.72"}})]),n._v(" "),e("div",{staticClass:"accordion-type-title"},[e("span",{staticClass:"admin-column-name",domProps:{innerHTML:n._s(t.label)}}),n._v(" "),e("div",{staticClass:"accordion-actions"},[e("a",{staticClass:"edit-button",attrs:{href:"#"},on:{click:function(e){return e.preventDefault(),n.toggleAccordion(e,t)}}},[n._v("Edit")]),n._v(" "),e("a",{staticClass:"remove-button",attrs:{href:"#"},on:{click:function(t){return t.preventDefault(),n.removeColumn.apply(null,arguments)}}},[n._v("Remove")])]),n._v(" "),e("span",{staticClass:"accordion-type is-pulled-right"},[n._v(n._s(n.taxonomy.title))])]),n._v(" "),e("div",{staticClass:"accordion-helper"},[e("button",{staticClass:"helper-button accordion-clone",on:{click:function(e){return n.cloneColumn(t)}}},[e("i",{staticClass:"ti-layers"})]),n._v(" "),e("button",{staticClass:"helper-button accordion-remove",on:{click:n.removeColumn}},[e("i",{staticClass:"ti-close"})]),n._v(" "),e("button",{staticClass:"helper-button accordion-toggler"},[e("i",{staticClass:"ti-angle-down"})])])]),n._v(" "),e("div",{staticClass:"accordion-opener",on:{click:function(e){return n.toggleAccordion(e,t)}}}),n._v(" "),e("div",{staticClass:"accordion-body"},[n._l(n.taxonomy.fields,(function(o,a){return[t.fields.includes(o.id)?e("div",{key:a,staticClass:"inner-content content-type"},[e("div",{staticClass:"columns"},[e("div",{staticClass:"column is-4"},[e("label",{attrs:{for:"content-"+i+"-"+t.name+"-"+o.id}},[n._v(n._s(o.title))])]),n._v(" "),"select"==o.type?e("div",{staticClass:"column"},[e("select",{directives:[{name:"model",rawName:"v-model",value:t.name,expression:"column.name"}],staticClass:"select-type",attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,placeholder:o.placeholder},on:{focus:function(e){return n.editing(t)},change:[function(e){var i=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){return"_value"in n?n._value:n.value}));n.$set(t,"name",e.target.multiple?i:i[0])},function(e){return n.changedType(t)}]}},n._l(o.options,(function(i,o){return e("option",{key:o,domProps:{value:o,selected:o==t.name}},[n._v(n._s(i))])})),0)]):n._e(),n._v(" "),"text"==o.type?e("div",{staticClass:"column"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.label,expression:"column.label"}],attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,type:"text",placeholder:o.placeholder},domProps:{value:t.label},on:{input:function(e){e.target.composing||n.$set(t,"label",e.target.value)}}})]):n._e(),n._v(" "),"slider"==o.type?e("div",{staticClass:"column"},[e("div",{staticClass:"range-slider-wrapper"},[e("input",{staticClass:"range-value",attrs:{type:"text",readonly:""},domProps:{value:n.formatedWidthValue(t.width.value)}}),n._v(" "),e("range-slider",{staticClass:"slider",attrs:{min:0,max:n.getWidthMax(t.width.unit)},model:{value:t.width.value,callback:function(e){n.$set(t.width,"value",e)},expression:"column.width.value"}})],1),n._v(" "),e("div",{staticClass:"unit-labels"},[e("label",{staticClass:"range-width-unit"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.width.unit,expression:"column.width.unit"}],staticClass:"range-width-unit-%",attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,type:"radio",value:"%"},domProps:{checked:"%"==t.width.unit,checked:n._q(t.width.unit,"%")},on:{change:[function(e){return n.$set(t.width,"unit","%")},function(e){return n.onSliderUnitChange(t)}]}}),n._v("%\n                                    ")]),n._v(" "),e("label",{staticClass:"range-width-unit"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.width.unit,expression:"column.width.unit"}],staticClass:"range-width-unit-px",attrs:{name:"content-"+i+"-"+t.name+"-"+o.id,type:"radio",value:"px"},domProps:{checked:"px"==t.width.unit,checked:n._q(t.width.unit,"px")},on:{change:[function(e){return n.$set(t.width,"unit","px")},function(e){return n.onSliderUnitChange(t)}]}}),n._v("px\n                                    ")])])]):n._e()])]):n._e()]}))],2)])})),0),n._v(" "),e("div",{staticClass:"columns is-desktop is-justify-content-flex-end"},[e("button",{staticClass:"wp-adminify-add-button is-clickable is-pulled-right",on:{click:n.addNewColumn}},[n._v("Add new")])]),n._v(" "),n.isTaxPro()?n._e():e("div",{staticClass:"admin-column--pro-guard",domProps:{innerHTML:n._s(n.proNotice())}})],1)}),[],!1,null,null,null).exports;i.Z.use(o.Z);var P=[{path:"/",component:r},{path:"/post-types",component:r,children:[{path:":post_type",component:C}]},{path:"/taxonomies",component:k,children:[{path:":taxonomy",component:E}]}];const j=new o.Z({routes:P});var K=e(629),Z=Object.assign({},window.adminify_columns_data);delete window.adminify_columns_data.ajax_nonce,delete window.adminify_columns_data.siteurl,delete window.adminify_columns_data.ajaxurl,delete window.adminify_columns_data.adminurl,delete window.adminify_columns_data.ajax_action,delete window.adminify_columns_data.is_pro;const M={proNotice:function proNotice(){return Z.pro_notice},isPro:function isPro(){return!!Z.is_pro},getSiteURL:function getSiteURL(){return Z.siteurl},getWPNonce:function getWPNonce(){return Z.ajax_nonce},getAjaxURL:function getAjaxURL(){return Z.ajaxurl},getAdminURL:function getAdminURL(){return Z.adminurl},getAjaxAction:function getAjaxAction(){return Z.ajax_action},ajax:function ajax(n,t){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"POST",i=jQuery.extend({},t,{route:n,_ajax_nonce:this.getWPNonce(),action:this.getAjaxAction()});return jQuery.ajax({type:e,data:i,url:this.getAjaxURL()})},nonReactive:function nonReactive(n){return JSON.parse(JSON.stringify(n))},triggerLoader:function triggerLoader(){var n=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];n?jQuery(".wp-adminify--admin-columns--editor--container .wp-adminify-loader").stop(!0,!0).fadeIn("slow"):jQuery(".wp-adminify--admin-columns--editor--container .wp-adminify-loader").stop(!0,!0).fadeOut("slow")}};function store_asyncGeneratorStep(n,t,e,i,o,a,s){try{var l=n[a](s),c=l.value}catch(n){return void e(n)}l.done?t(c):Promise.resolve(c).then(i,o)}function store_asyncToGenerator(n){return function(){var t=this,e=arguments;return new Promise((function(i,o){var a=n.apply(t,e);function _next(n){store_asyncGeneratorStep(a,i,o,_next,_throw,"next",n)}function _throw(n){store_asyncGeneratorStep(a,i,o,_next,_throw,"throw",n)}_next(void 0)}))}}i.Z.use(K.ZP);var N={post_types:function post_types(n){return Array.isArray(n.post_types)&&n.post_types.length?n.post_types.map((function(n){return n.display_columns||(n.display_columns=[]),n.display_columns=n.display_columns.map((function(n){return delete n.forceOpen,n})),n})):[]},taxonomies:function taxonomies(n){return Array.isArray(n.taxonomies)&&n.taxonomies.length?n.taxonomies.map((function(n){return n.display_columns||(n.display_columns=[]),n.display_columns=n.display_columns.map((function(n){return delete n.forceOpen,n})),n})):[]},post_type_by_name:function post_type_by_name(n,t){return function(n){return t.post_types.find((function(t){return t.name===n}))}},taxonomy_by_name:function taxonomy_by_name(n,t){return function(n){return t.taxonomies.find((function(t){return t.name===n}))}}},O={get_post_types:function get_post_types(n){return store_asyncToGenerator(s().mark((function _callee(){var t,e,i;return s().wrap((function _callee$(o){for(;;)switch(o.prev=o.next){case 0:if(t=n.getters,e=n.commit,!t.post_types.length){o.next=3;break}return o.abrupt("return",t.post_types);case 3:return M.triggerLoader(),o.next=6,M.ajax("get_post_type_data");case 6:if(i=o.sent,M.triggerLoader(!1),!(i&&i.data&&i.success)){o.next=11;break}return e("set_post_types",{post_types:i.data}),o.abrupt("return",t.post_types);case 11:case"end":return o.stop()}}),_callee)})))()},get_taxonomies:function get_taxonomies(n){return store_asyncToGenerator(s().mark((function _callee2(){var t,e,i;return s().wrap((function _callee2$(o){for(;;)switch(o.prev=o.next){case 0:if(t=n.getters,e=n.commit,!t.taxonomies.length){o.next=3;break}return o.abrupt("return",t.taxonomies);case 3:return M.triggerLoader(),o.next=6,M.ajax("get_taxonomy_data");case 6:if(i=o.sent,M.triggerLoader(!1),!(i&&i.data&&i.success)){o.next=11;break}return e("set_taxonomies",{taxonomies:i.data}),o.abrupt("return",t.taxonomies);case 11:case"end":return o.stop()}}),_callee2)})))()},save_store:function save_store(n,t){return store_asyncToGenerator(s().mark((function _callee3(){var e,i;return s().wrap((function _callee3$(o){for(;;)switch(o.prev=o.next){case 0:return e=n.commit,M.triggerLoader(),o.next=4,M.ajax("save_columns_data",t);case 4:i=o.sent,M.triggerLoader(!1),i&&i.data&&i.success&&(e("set_post_types",{post_types:i.data.post_types}),e("set_taxonomies",{taxonomies:i.data.taxonomies}));case 7:case"end":return o.stop()}}),_callee3)})))()}};const S=new K.ZP.Store({state:{post_types:[],taxonomies:[]},mutations:{set_post_types:function set_post_types(n,t){var e=t.post_types;n.post_types=e},set_taxonomies:function set_taxonomies(n,t){var e=t.taxonomies;n.taxonomies=e}},getters:N,actions:O});Window.Events=new i.Z,i.Z.mixin({methods:M}),i.Z.component("admin-columns-app",e(7287).Z),i.Z.component("post-types-sidebar",e(1472).Z),jQuery((function(n){n("#wpadminify-admin-columns").length&&new i.Z({el:"#wpadminify-admin-columns",template:"<admin-columns-app></admin-columns-app>",router:j,store:S})}))},1332:(n,t,e)=>{e.d(t,{Z:()=>l});var i=e(4015),o=e.n(i),a=e(3645),s=e.n(a)()(o());s.push([n.id,".ghost{background:#a7a7aa;opacity:.5}","",{version:3,sources:["webpack://./dev/admin/modules/admin-columns/pages/post-type.vue"],names:[],mappings:"AAiXA,OAEA,kBAAA,CADA,UAEA",sourcesContent:['<template>\n    <div class="tab-pane" :id="post_type.name">\n\n        <draggable v-model="post_type.display_columns" v-bind="dragOptions" @start="drag = true" @end="drag = false">\n\n            <div ref="accordion" class="admin-column-accordion" :class="column.forceOpen && \'admin-column-accordion-force--open admin-column-accordion--open\'" v-for="(column, colIndex) in post_type.display_columns" :key="column.name + colIndex">\n\n                <div class="accordion-title p-4 pr-6 mr-6">\n\n                    <svg class="drag-icon is-pulled-left is-clickable mr-2" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M12 7C13.1046 7 14 6.10457 14 5C14 3.89543 13.1046 3 12 3C10.8954 3 10 3.89543 10 5C10 6.10457 10.8954 7 12 7Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M12 21C13.1046 21 14 20.1046 14 19C14 17.8954 13.1046 17 12 17C10.8954 17 10 17.8954 10 19C10 20.1046 10.8954 21 12 21Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M5 14C6.10457 14 7 13.1046 7 12C7 10.8954 6.10457 10 5 10C3.89543 10 3 10.8954 3 12C3 13.1046 3.89543 14 5 14Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M5 7C6.10457 7 7 6.10457 7 5C7 3.89543 6.10457 3 5 3C3.89543 3 3 3.89543 3 5C3 6.10457 3.89543 7 5 7Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M5 21C6.10457 21 7 20.1046 7 19C7 17.8954 6.10457 17 5 17C3.89543 17 3 17.8954 3 19C3 20.1046 3.89543 21 5 21Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M19 14C20.1046 14 21 13.1046 21 12C21 10.8954 20.1046 10 19 10C17.8954 10 17 10.8954 17 12C17 13.1046 17.8954 14 19 14Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M19 7C20.1046 7 21 6.10457 21 5C21 3.89543 20.1046 3 19 3C17.8954 3 17 3.89543 17 5C17 6.10457 17.8954 7 19 7Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M19 21C20.1046 21 21 20.1046 21 19C21 17.8954 20.1046 17 19 17C17.8954 17 17 17.8954 17 19C17 20.1046 17.8954 21 19 21Z" fill="#4E4B66" fill-opacity="0.72" />\n                    </svg>\n\n                    <div class="accordion-type-title">\n                        <span class="admin-column-name" v-html="column.label"></span>\n                        <div class="accordion-actions">\n                            <a href="#" class="edit-button" @click.prevent="toggleAccordion( $event, column )">Edit</a>\n                            <a href="#" class="remove-button" @click.prevent="removeColumn">Remove</a>\n                        </div>\n                        <span class="accordion-type is-pulled-right">{{ post_type.title }}</span>\n                    </div>\n\n                    <div class="accordion-helper">\n                        <button class="helper-button accordion-clone" @click="cloneColumn(column)"><i class="ti-layers"></i></button>\n                        <button class="helper-button accordion-remove" @click="removeColumn"><i class="ti-close"></i></button>\n                        <button class="helper-button accordion-toggler"><i class="ti-angle-down"></i></button>\n                    </div>\n\n                </div>\n\n                <div class="accordion-opener" @click="toggleAccordion( $event, column )"></div>\n\n                <div class="accordion-body">\n\n                    <template v-for="(field, key) in post_type.fields">\n\n                        <div class="inner-content content-type" :key="key" v-if="field.id == \'type\'">\n                            <div class="columns">\n\n                                <div class="column is-4">\n                                    <label :for="`content-${colIndex}-${column.name}-${field.id}`">{{ field.title }}</label>\n                                </div>\n                                <div class="column">\n                                    <select :name="`content-${colIndex}-${column.name}-${field.id}`" class="select-type" :placeholder="field.placeholder" v-model="column.name" @focus="editing(column)" @change="changedType(column)">\n                                        <template v-for="(parent_option, parent_option_key) in field.options">\n\n                                            <optgroup v-if="parent_option.group" :label="parent_option.group" :key="parent_option_key">\n                                                <option v-for="(option, option_val) in parent_option.options" :key="option_val" :value="option_val" :selected="option_val == column.name">{{option}}</option>\n                                            </optgroup>\n\n                                            <option v-else :key="parent_option.name" :value="parent_option.name" :selected="parent_option.name == column.name">{{parent_option.title}}</option>\n\n                                        </template>\n                                    </select>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="inner-content content-type" :key="key" v-if="field.id == \'function_name\' && column.name == \'function\'">\n                            <div class="columns">\n\n                                <div class="column is-4">\n                                    <label :for="`content-${colIndex}-${column.name}-${field.id}`">{{ field.title }}</label>\n                                </div>\n                                <div class="column">\n                                    <input :name="`content-${colIndex}-${column.name}-${field.id}`" type="text" :placeholder="field.placeholder" v-model="column.function_name" @change="changedType(column)">\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="inner-content content-type" :key="key" v-if="field.id == \'shortcode_name\' && column.name == \'shortcode\'">\n                            <div class="columns">\n\n                                <div class="column is-4">\n                                    <label :for="`content-${colIndex}-${column.name}-${field.id}`">{{ field.title }}</label>\n                                </div>\n                                <div class="column">\n                                    <input :name="`content-${colIndex}-${column.name}-${field.id}`" type="text" :placeholder="field.placeholder" v-model="column.shortcode_name" @change="changedType(column)">\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="inner-content content-type" :key="key" v-if="field.id == \'label\'">\n                            <div class="columns">\n                                \n                                <div class="column is-4">\n                                    <label :for="`content-${colIndex}-${column.name}-${field.id}`">{{ field.title }}</label>\n                                </div>\n                                <div class="column">\n                                    <input :name="`content-${colIndex}-${column.name}-${field.id}`" type="text" :placeholder="field.placeholder" v-model="column.label">\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div class="inner-content content-type" :key="key" v-if="field.id == \'width\'">\n                            <div class="columns">\n                                \n                                <div class="column is-4">\n                                    <label :for="`content-${colIndex}-${column.name}-${field.id}`">{{ field.title }}</label>\n                                </div>\n                                <div class="column">\n\n                                    <div class="range-slider-wrapper">\n                                        <input type="text" class="range-value" :value="formatedWidthValue(column.width.value)" readonly>\n                                        <range-slider class="slider" v-model="column.width.value" :min="0" :max="getWidthMax(column.width.unit)"></range-slider>\n                                    </div>\n\n                                    <div class="unit-labels">\n                                        <label class="range-width-unit">\n                                            <input :name="`content-${colIndex}-${column.name}-${field.id}`" @change="onSliderUnitChange(column)" class="range-width-unit-%" type="radio"  value="%" v-model="column.width.unit" :checked="column.width.unit == \'%\' ">%\n                                        </label>\n                                        <label class="range-width-unit">\n                                            <input :name="`content-${colIndex}-${column.name}-${field.id}`" @change="onSliderUnitChange(column)" class="range-width-unit-px" type="radio" value="px" v-model="column.width.unit" :checked="column.width.unit == \'px\' ">px\n                                        </label>\n                                    </div>\n\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </template>\n\n                </div>\n\n            </div>\n\n        </draggable>\n\n        <div class="columns is-desktop is-justify-content-flex-end">\n            <button class="wp-adminify-add-button is-clickable is-pulled-right" @click="addNewColumn">Add new</button>\n        </div>\n\n        <div class="admin-column--pro-guard" v-if="!isTypePro()" v-html="proNotice()"></div>\n\n    </div>\n</template>\n\n<script>\n\nimport RangeSlider from \'vue-range-slider\'\nimport draggable from \'vuedraggable\'\nimport \'vue-range-slider/dist/vue-range-slider.css\'\n\nexport default {\n    \n    data: () => ({\n        post_type: {},\n        current: null,\n        current_column: {},\n        drag: false\n    }),\n\n    components: {\n        RangeSlider,\n        draggable\n    },\n\n    mounted() {\n        this.current = this.$route.params.post_type;\n        this.post_type = this.$store.getters.post_type_by_name( this.current );\n    },\n\n    computed: {\n        \n        dragOptions() {\n            return {\n                animation: 150,\n                group: "description",\n                disabled: ! this.isTypePro(),\n                ghostClass: "ghost"\n            };\n        },\n\n        fieldTypeKeys() {\n            let typedata = this.post_type.fields.find( field => field.id == \'type\' ).options;\n            let options = this.groupToOptions( typedata );\n            return Object.keys( options );\n        },\n\n        displayColumnKeys() {\n            return this.post_type.display_columns.map( column => column.name );\n        },\n\n        // regularColumnsByGroups( groups = [] ) {\n        //     return this.post_type.fields.filter()\n        // }\n\n    },\n\n    methods: {\n\n        groupToOptions( groups ) {\n            let data = {};\n            groups.forEach( group => {\n                if ( group.group ) {\n                    data = jQuery.extend( {}, data, group.options );\n                } else {\n                    data[group.name] = group.title;\n                }\n            });\n            return data;\n        },\n\n        isTypePro() {\n            if ( this.isPro() ) return true;\n            if ( ! this.post_type.is_pro ) return true;\n            return false;\n        },\n\n        editing( column ) {\n            if ( ! this.isTypePro() ) return;\n            this.current_column = this.nonReactive( column );\n        },\n\n        onSliderUnitChange( column ) {\n            if ( ! this.isTypePro() ) return;\n            let max = this.getWidthMax( column.width.unit );\n            if ( column.width.value > max ) column.width.value = max;\n        },\n\n        formatedWidthValue( width ) {\n            if ( width == 0 ) return \'auto\';\n            return width;\n        },\n\n        getWidthMax( unit ) {\n            if ( unit == \'%\' ) return 100;\n            return 1000;\n        },\n\n        toggleAccordion( event, column ) {\n\n            if ( ! this.isTypePro() ) return;\n\n            let $accordion = jQuery( event.target ).closest(\'.admin-column-accordion\').toggleClass(\'admin-column-accordion--open\');\n            let $body = $accordion.find(\'.accordion-body\');\n\n            if ( $accordion.hasClass(\'admin-column-accordion--open\') ) {\n                $body.slideDown(200, () => {\n                    column.forceOpen = true;\n                });\n            } else {\n                $body.slideUp(200, () => {\n                    $accordion.removeClass(\'admin-column-accordion-force--open\');\n                    delete column.forceOpen;\n                });\n            }\n\n        },\n\n        removeColumn( event ) {\n            \n            if ( ! this.isTypePro() ) return;\n\n            let index = jQuery( event.target ).closest(\'.admin-column-accordion\').index();\n\n            if ( index > -1 ) this.post_type.display_columns.splice( index, 1 );\n\n        },\n\n        hasAddedAllFields() {\n            return this.fieldTypeKeys.every( field_key => this.displayColumnKeys.includes(field_key) );\n        },\n\n        columnsExtraCheck() {\n            return {\n                function: \'function_name\',\n                shortcode: \'shortcode_name\'\n            };\n        },\n\n        changedType( column ) {\n\n            if ( ! this.isTypePro() ) return;\n\n            let columnsExtraCheck = this.columnsExtraCheck();\n\n            let columns = this.post_type.display_columns.filter( _column => {\n                if ( _column.name in columnsExtraCheck ) {\n                    let _field = columnsExtraCheck[ _column.name ];\n                    return ( column.name == _column.name && _field in column && _field in _column && column[_field] == _column[_field] );\n                }\n                return column.name == _column.name;\n            });\n\n            if ( columns.length > 1 ) {\n\n                if ( column.name in columnsExtraCheck ) {\n                    let _field = columnsExtraCheck[ column.name ];\n                    column[ _field ] = \'\';\n                } else {\n                    column.name = this.current_column.name;\n                }\n\n                this.showError({\n                    title: `Can\'t change the column!`,\n                    content: `This field is already in use, you can\'t use it twice`\n                });\n\n            }\n        },\n\n        getNonAddedColumnKeys() {\n            return this.fieldTypeKeys.filter( field_key => ! this.displayColumnKeys.includes(field_key) );\n        },\n\n        getNewDefaults( columnKey ) {\n\n            if ( ! this.isTypePro() ) return;\n\n            let defaults = {\n                forceOpen: true,\n                label: this.post_type.columns[columnKey],\n                name: columnKey,\n                width: {\n                    unit: \'%\',\n                    value: \'auto\'\n                }\n            }\n\n            return defaults;\n\n        },\n\n        showError( data ) {\n            Window.Events.$emit( \'AdminColumnsError\', data );\n        },\n\n        getAddableColumnKeys() {\n            let extraKeys = Object.keys( this.columnsExtraCheck() );\n            return this.getNonAddedColumnKeys().filter( _key => ! extraKeys.includes(_key) ).concat( extraKeys );\n        },\n\n        addNewColumn() {\n            if ( ! this.isTypePro() ) return;\n            this.post_type.display_columns.push( this.getNewDefaults( this.getAddableColumnKeys()[0] ) );\n        },\n\n        cloneColumn( column ) {\n            if ( ! this.isTypePro() ) return;\n\n            let columnKey = column.name;\n            if ( ! (columnKey in this.columnsExtraCheck()) ) {\n                columnKey = this.getAddableColumnKeys()[0];\n            }\n            let newColumn = this.getNewDefaults( columnKey );\n            newColumn.width = this.nonReactive( column.width );\n            this.post_type.display_columns.push( newColumn );\n        }\n\n    }\n\n}\n<\/script>\n\n<style>\n    .ghost {\n        opacity: 0.5;\n        background: #a7a7aa;\n    }\n</style>'],sourceRoot:""}]);const l=s},9015:(n,t,e)=>{e.d(t,{Z:()=>l});var i=e(4015),o=e.n(i),a=e(3645),s=e.n(a)()(o());s.push([n.id,".taxonomy-post-type{-webkit-box-flex:1;-webkit-flex:auto;-ms-flex:auto;flex:auto;font-size:.8em;font-weight:700;letter-spacing:.3px;opacity:.5;text-align:right;text-transform:capitalize}","",{version:3,sources:["webpack://./dev/admin/modules/admin-columns/pages/taxonomies.vue"],names:[],mappings:"AA+EA,oBAOA,kBAAA,CAAA,iBAAA,CAAA,aAAA,CAAA,SAAA,CAHA,cAAA,CAEA,eAAA,CADA,mBAAA,CAFA,UAAA,CAFA,gBAAA,CACA,yBAMA",sourcesContent:['<template>\n    <div class="tab-pane" id="taxonomies">\n        <div class="columns">\n            \n            <div class="column is-4">\n                <div class="tabs is-boxed">\n                    <ul class="nav-tabs is-flex is-flex-direction-column is-align-items-flex-start">\n\n                        <router-link v-for="(taxonomy_data) in taxonomies" :key="taxonomy_data.name" :to=\'"/taxonomies/" + taxonomy_data.name\' v-slot="{ navigate, isActive }" custom exact>\n                            <li class="nav-item" @click="navigate" @keypress.enter="navigate" role="link" :class="[isActive && \'router-link-active\']">\n                                <a class="nav-link is-clickable" :class="[taxonomy == taxonomy_data.name && \'active\']" href="javascript:void(0);">\n                                    <span class="icon is-small"><i class="dashicons dashicons-edit-page"></i></span>\n                                    <span>{{taxonomy_data.title}}</span>\n                                    <span v-if="! isPro() && taxonomy_data.is_pro" class="adminify-column-post--pro" style="margin-left: 4px;">- (Pro)</span>\n                                    <span class="taxonomy-post-type" v-if="taxonomy_data.object_type">[{{taxonomy_data.object_type}}]</span>\n                                </a>\n                            </li>\n                        </router-link>\n\n                    </ul>\n                </div>\n            </div>\n\n            <div class="column">\n                <div class="tab-content tab-panel pane">\n                    <router-view :key="$route.fullPath" v-if="taxonomies.length"></router-view>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    data: () => ({\n        loading: false,\n        taxonomies: [],\n        taxonomy: null\n    }),\n\n    async mounted() {\n\n        this.taxonomy = this.$route.params.taxonomy;\n\n        await this.load_taxonomy_data();\n\n        if ( ! this.taxonomy && this.taxonomies.length ) {\n            this.$router.push( `/taxonomies/${this.taxonomies[0].name}` );\n        }\n\n    },\n\n    methods: {\n\n        async load_taxonomy_data() {\n            this.taxonomies = await this.$store.dispatch( \'get_taxonomies\' );\n        },\n\n        set_parent_data() {\n            this.$parent.taxonomies = this.taxonomies;\n        }\n\n    },\n\n    watch: {\n        taxonomies: {\n            deep: true,\n            handler() {\n                this.set_parent_data()\n            }\n        }\n    }\n\n}\n<\/script>\n\n<style>\n    .taxonomy-post-type {\n        text-align: right;\n        text-transform: capitalize;\n        opacity: .5;\n        font-size: .8em;\n        letter-spacing: .3px;\n        font-weight: bold;\n        flex: auto;\n    }\n</style>'],sourceRoot:""}]);const l=s},655:(n,t,e)=>{e.d(t,{Z:()=>l});var i=e(4015),o=e.n(i),a=e(3645),s=e.n(a)()(o());s.push([n.id,".ghost{background:#a7a7aa;opacity:.5}","",{version:3,sources:["webpack://./dev/admin/modules/admin-columns/pages/taxonomy.vue"],names:[],mappings:"AAkSA,OAEA,kBAAA,CADA,UAEA",sourcesContent:['<template>\n    <div class="tab-pane" :id="taxonomy.name">\n\n        <draggable v-model="taxonomy.display_columns" v-bind="dragOptions" @start="drag = true" @end="drag = false">\n\n            <div ref="accordion" class="admin-column-accordion" :class="column.forceOpen && \'admin-column-accordion-force--open admin-column-accordion--open\'" v-for="(column, colIndex) in taxonomy.display_columns" :key="column.name + colIndex">\n\n                <div class="accordion-title p-4 pr-6 mr-6">\n\n                    <svg class="drag-icon is-pulled-left is-clickable mr-2" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M12 7C13.1046 7 14 6.10457 14 5C14 3.89543 13.1046 3 12 3C10.8954 3 10 3.89543 10 5C10 6.10457 10.8954 7 12 7Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M12 21C13.1046 21 14 20.1046 14 19C14 17.8954 13.1046 17 12 17C10.8954 17 10 17.8954 10 19C10 20.1046 10.8954 21 12 21Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M5 14C6.10457 14 7 13.1046 7 12C7 10.8954 6.10457 10 5 10C3.89543 10 3 10.8954 3 12C3 13.1046 3.89543 14 5 14Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M5 7C6.10457 7 7 6.10457 7 5C7 3.89543 6.10457 3 5 3C3.89543 3 3 3.89543 3 5C3 6.10457 3.89543 7 5 7Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M5 21C6.10457 21 7 20.1046 7 19C7 17.8954 6.10457 17 5 17C3.89543 17 3 17.8954 3 19C3 20.1046 3.89543 21 5 21Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M19 14C20.1046 14 21 13.1046 21 12C21 10.8954 20.1046 10 19 10C17.8954 10 17 10.8954 17 12C17 13.1046 17.8954 14 19 14Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M19 7C20.1046 7 21 6.10457 21 5C21 3.89543 20.1046 3 19 3C17.8954 3 17 3.89543 17 5C17 6.10457 17.8954 7 19 7Z" fill="#4E4B66" fill-opacity="0.72" />\n                        <path d="M19 21C20.1046 21 21 20.1046 21 19C21 17.8954 20.1046 17 19 17C17.8954 17 17 17.8954 17 19C17 20.1046 17.8954 21 19 21Z" fill="#4E4B66" fill-opacity="0.72" />\n                    </svg>\n\n                    <div class="accordion-type-title">\n                        <span class="admin-column-name" v-html="column.label"></span>\n                        <div class="accordion-actions">\n                            <a href="#" class="edit-button" @click.prevent="toggleAccordion( $event, column )">Edit</a>\n                            <a href="#" class="remove-button" @click.prevent="removeColumn">Remove</a>\n                        </div>\n                        <span class="accordion-type is-pulled-right">{{ taxonomy.title }}</span>\n                    </div>\n\n                    <div class="accordion-helper">\n                        <button class="helper-button accordion-clone" @click="cloneColumn(column)"><i class="ti-layers"></i></button>\n                        <button class="helper-button accordion-remove" @click="removeColumn"><i class="ti-close"></i></button>\n                        <button class="helper-button accordion-toggler"><i class="ti-angle-down"></i></button>\n                    </div>\n\n                </div>\n\n                <div class="accordion-opener" @click="toggleAccordion( $event, column )"></div>\n\n                <div class="accordion-body">\n\n                    <template v-for="(field, key) in taxonomy.fields">\n\n                        <div class="inner-content content-type" :key="key" v-if="column.fields.includes(field.id)">\n                            <div class="columns">\n\n                                <div class="column is-4">\n                                    <label :for="`content-${colIndex}-${column.name}-${field.id}`">{{ field.title }}</label>\n                                </div>\n\n                                <div class="column" v-if="field.type == \'select\'">\n                                    <select :name="`content-${colIndex}-${column.name}-${field.id}`" class="select-type" :placeholder="field.placeholder" v-model="column.name" @focus="editing(column)" @change="changedType(column)">\n                                        \x3c!-- <optgroup label="Default"></optgroup> --\x3e\n                                        <option v-for="(option, option_val) in field.options" :key="option_val" :value="option_val" :selected="option_val == column.name">{{option}}</option>\n                                    </select>\n                                </div>\n\n                                <div class="column" v-if="field.type == \'text\'">\n                                    <input :name="`content-${colIndex}-${column.name}-${field.id}`" type="text" :placeholder="field.placeholder" v-model="column.label">\n                                </div>\n\n                                <div class="column" v-if="field.type == \'slider\'">\n\n                                    <div class="range-slider-wrapper">\n                                        <input type="text" class="range-value" :value="formatedWidthValue(column.width.value)" readonly>\n                                        <range-slider class="slider" v-model="column.width.value" :min="0" :max="getWidthMax(column.width.unit)"></range-slider>\n                                    </div>\n\n                                    <div class="unit-labels">\n                                        <label class="range-width-unit">\n                                            <input :name="`content-${colIndex}-${column.name}-${field.id}`" @change="onSliderUnitChange(column)" class="range-width-unit-%" type="radio"  value="%" v-model="column.width.unit" :checked="column.width.unit == \'%\' ">%\n                                        </label>\n                                        <label class="range-width-unit">\n                                            <input :name="`content-${colIndex}-${column.name}-${field.id}`" @change="onSliderUnitChange(column)" class="range-width-unit-px" type="radio" value="px" v-model="column.width.unit" :checked="column.width.unit == \'px\' ">px\n                                        </label>\n                                    </div>\n\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </template>\n\n                </div>\n\n            </div>\n\n        </draggable>\n\n        <div class="columns is-desktop is-justify-content-flex-end">\n            <button class="wp-adminify-add-button is-clickable is-pulled-right" @click="addNewColumn">Add new</button>\n        </div>\n\n        <div class="admin-column--pro-guard" v-if="!isTaxPro()" v-html="proNotice()"></div>\n\n    </div>\n</template>\n\n<script>\n\nimport RangeSlider from \'vue-range-slider\'\nimport draggable from \'vuedraggable\'\nimport \'vue-range-slider/dist/vue-range-slider.css\'\n\nexport default {\n    \n    data: () => ({\n        taxonomy: {},\n        current: null,\n        current_column: {},\n        drag: false\n    }),\n\n    components: {\n        RangeSlider,\n        draggable\n    },\n\n    mounted() {\n        this.current = this.$route.params.taxonomy;\n        this.taxonomy = this.$store.getters.taxonomy_by_name( this.current );\n    },\n\n    computed: {\n        \n        dragOptions() {\n            return {\n                animation: 150,\n                group: "description",\n                disabled: ! this.isTaxPro(),\n                ghostClass: "ghost"\n            };\n        },\n\n        fieldTypeKeys() {\n            return Object.keys( this.taxonomy.fields.find( field => field.id == \'type\' ).options );\n        },\n\n        displayColumnKeys() {\n            return this.taxonomy.display_columns.map( column => column.name );\n        }\n\n    },\n\n    methods: {\n\n        isTaxPro() {\n            if ( this.isPro() ) return true;\n            if ( ! this.taxonomy.is_pro ) return true;\n            return false;\n        },\n\n        editing( column ) {\n            if ( ! this.isTaxPro() ) return;\n            this.current_column = this.nonReactive( column );\n        },\n\n        changedType( column ) {\n\n            if ( ! this.isTaxPro() ) return;\n\n            let keys = this.displayColumnKeys.filter( field_key => field_key == column.name );\n\n            if ( keys.length > 1 ) {\n                \n                let label = jQuery( this.taxonomy.columns[column.name] ).text(); // fix for HTML value\n                if ( ! label ) label = this.taxonomy.columns[column.name];\n\n                if ( this.current_column.name ) column.name = this.current_column.name;\n\n                this.showError({\n                    title: `Can\'t change the column!`,\n                    content: `${label} is already in use, you can\'t use it twice`\n                });\n\n            }\n        },\n\n        onSliderUnitChange( column ) {\n            if ( ! this.isTaxPro() ) return;\n            let max = this.getWidthMax( column.width.unit );\n            if ( column.width.value > max ) column.width.value = max;\n        },\n\n        formatedWidthValue( width ) {\n            if ( width == 0 ) return \'auto\';\n            return width;\n        },\n\n        getWidthMax( unit ) {\n            if ( unit == \'%\' ) return 100;\n            return 1000;\n        },\n\n        toggleAccordion( event, column ) {\n\n            if ( ! this.isTaxPro() ) return;\n\n            let $accordion = jQuery( event.target ).closest(\'.admin-column-accordion\').toggleClass(\'admin-column-accordion--open\');\n            let $body = $accordion.find(\'.accordion-body\');\n\n            if ( $accordion.hasClass(\'admin-column-accordion--open\') ) {\n                $body.slideDown(200, () => {\n                    column.forceOpen = true;\n                });\n            } else {\n                $body.slideUp(200, () => {\n                    $accordion.removeClass(\'admin-column-accordion-force--open\');\n                    delete column.forceOpen;\n                });\n            }\n\n        },\n\n        removeColumn( event ) {\n\n            if ( ! this.isTaxPro() ) return;\n\n            let index = jQuery( event.target ).closest(\'.admin-column-accordion\').index();\n\n            if ( index > -1 ) this.taxonomy.display_columns.splice( index, 1 );\n\n        },\n\n        hasAddedAllFields() {\n            return this.fieldTypeKeys.every( field_key => this.displayColumnKeys.includes(field_key) );\n        },\n\n        getNonAddedFieldKeys() {\n            return this.fieldTypeKeys.filter( field_key => ! this.displayColumnKeys.includes(field_key) );\n        },\n\n        getNewDefaults( columnKey ) {\n\n            if ( ! this.isTaxPro() ) return;\n\n            return {\n                forceOpen: true,\n                fields: [\'type\', \'label\', \'width\'],\n                label: this.taxonomy.columns[columnKey],\n                name: columnKey,\n                width: {\n                    unit: \'%\',\n                    value: \'auto\'\n                }\n            }\n\n        },\n        \n        showError( data ) {\n            Window.Events.$emit( \'AdminColumnsError\', data );\n        },\n\n        addNewColumn() {\n\n            if ( ! this.isTaxPro() ) return;\n            \n            if ( this.hasAddedAllFields() ) return this.showError({\n                title: `Can\'t add new column!`,\n                content: `All columns are added, you can\'t add new column`\n            });\n\n            let columnKey = this.getNonAddedFieldKeys()[0];\n            let newColumn = this.getNewDefaults( columnKey );\n            this.taxonomy.display_columns.push( newColumn );\n        },\n\n        cloneColumn( column ) {\n\n            if ( ! this.isTaxPro() ) return;\n            \n            if ( this.hasAddedAllFields() ) return this.showError({\n                title: `Can\'t clone column!`,\n                content: `All columns are added, you can\'t add new column`\n            });\n            \n            let columnKey = this.getNonAddedFieldKeys()[0];\n            let newColumn = this.getNewDefaults( columnKey );\n            newColumn.width = this.nonReactive( column.width );\n            this.taxonomy.display_columns.push( newColumn );\n        }\n\n    }\n\n}\n<\/script>\n\n<style>\n    .ghost {\n        opacity: 0.5;\n        background: #a7a7aa;\n    }\n</style>'],sourceRoot:""}]);const l=s},7287:(n,t,e)=>{e.d(t,{Z:()=>s});var i=e(7757),o=e.n(i);function asyncGeneratorStep(n,t,e,i,o,a,s){try{var l=n[a](s),c=l.value}catch(n){return void e(n)}l.done?t(c):Promise.resolve(c).then(i,o)}const a={data:function data(){return{post_types:[],taxonomies:[],popup_open:!0,disable_save_btn:!1,success_message:!1,popup_title:"",popup_details:""}},mounted:function mounted(){var n=this;Window.Events.$on("AdminColumnsError",(function(t){n.popup_title=t.title,n.popup_details=t.content,n.open_popup()})),jQuery("body").on("click",(function(){n.success_message=!1}))},methods:{open_popup:function open_popup(){jQuery("body").addClass("wp-adminify--popup-show"),this.popup_open=!0},hide_popup:function hide_popup(){jQuery("body").removeClass("wp-adminify--popup-show"),this.popup_open=!1},save_store:function save_store(){var n=this;return function _asyncToGenerator(n){return function(){var t=this,e=arguments;return new Promise((function(i,o){var a=n.apply(t,e);function _next(n){asyncGeneratorStep(a,i,o,_next,_throw,"next",n)}function _throw(n){asyncGeneratorStep(a,i,o,_next,_throw,"throw",n)}_next(void 0)}))}}(o().mark((function _callee(){var t,e;return o().wrap((function _callee$(i){for(;;)switch(i.prev=i.next){case 0:return t=n.post_types,e=n.taxonomies,n.disable_save_btn=!0,i.next=5,n.$store.dispatch("save_store",{post_types:t,taxonomies:e});case 5:n.disable_save_btn=!1,n.success_message=!0,setTimeout((function(){n.success_message=!1}),1500);case 8:case"end":return i.stop()}}),_callee)})))()}}};const s=(0,e(1900).Z)(a,(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{attrs:{id:"wpadminify-admin-columns"}},[n.success_message?e("div",{staticClass:"admin-column--message"},[n._v("Settings has been saved")]):n._e(),n._v(" "),e("div",{staticClass:"tabs is-boxed is-centered"},[e("ul",{staticClass:"nav-tabs",attrs:{role:"tablist"}},[e("router-link",{attrs:{to:"/post-types",custom:""},scopedSlots:n._u([{key:"default",fn:function(t){var i=t.navigate,o=t.isActive;return[e("li",{staticClass:"nav-item",class:[o&&"router-link-active"],attrs:{id:"analyze-tab",role:"link"},on:{click:i,keypress:function(t){return!t.type.indexOf("key")&&n._k(t.keyCode,"enter",13,t.key,"Enter")?null:i.apply(null,arguments)}}},[e("a",{staticClass:"nav-link is-clickable",class:[o&&"active"],attrs:{href:"javascript:void(0);"}},[e("span",{staticClass:"icon is-small"},[e("i",{staticClass:"dashicons dashicons-edit-page"})]),n._v(" "),e("span",[n._v("Post Types")])])])]}}])}),n._v(" "),e("router-link",{attrs:{to:"/taxonomies",custom:""},scopedSlots:n._u([{key:"default",fn:function(t){var i=t.navigate,o=t.isActive;return[e("li",{staticClass:"nav-item",class:[o&&"router-link-active"],attrs:{id:"analyze-tab",role:"link"},on:{click:i,keypress:function(t){return!t.type.indexOf("key")&&n._k(t.keyCode,"enter",13,t.key,"Enter")?null:i.apply(null,arguments)}}},[e("a",{staticClass:"nav-link is-clickable",class:[o&&"active"],attrs:{href:"javascript:void(0);"}},[e("span",{staticClass:"icon is-small"},[e("i",{staticClass:"dashicons dashicons-category"})]),n._v(" "),e("span",[n._v("Taxonomies")])])])]}}])})],1)]),n._v(" "),e("div",{staticClass:"tab-content tab-panel pane"},[e("div",{staticClass:"wp-adminify-loader"}),n._v(" "),e("router-view",{key:n.$route.fullPath})],1),n._v(" "),e("div",{staticClass:"mt-5 has-text-centered"},[e("button",{staticClass:"button-primary is-clickable",attrs:{disabled:n.disable_save_btn},on:{click:n.save_store}},[n._v("\n      Save Settings\n    ")])]),n._v(" "),e("div",{staticClass:"wp-adminify--popup-area"},[e("div",{staticClass:"wp-adminify--popup-container"},[e("div",{staticClass:"wp-adminify--popup-container_inner"},[n.popup_open?e("div",{staticClass:"popup--delete-folder"},[e("a",{staticClass:"wp-adminify--popup-close",attrs:{href:"#"},on:{click:function(t){return t.preventDefault(),n.hide_popup.apply(null,arguments)}}},[e("span",{staticClass:"dashicons dashicons-no-alt"})]),n._v(" "),e("h3",[n._v(n._s(n.popup_title))]),n._v(" "),e("div",{staticClass:"popup-content",domProps:{innerHTML:n._s(n.popup_details)}}),n._v(" "),e("a",{staticClass:"button button-primary",attrs:{href:"#"},on:{click:function(t){return t.preventDefault(),n.hide_popup.apply(null,arguments)}}},[n._v("Got it")])]):n._e()])])])])}),[],!1,null,null,null).exports},1472:(n,t,e)=>{e.d(t,{Z:()=>i});const i=(0,e(1900).Z)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"column is-4"},[e("div",{staticClass:"tabs is-boxed"},[e("ul",{staticClass:"nav-tabs is-flex is-flex-direction-column is-align-items-flex-start"},[e("router-link",{attrs:{to:"/post-types/post",custom:"",exact:""},scopedSlots:n._u([{key:"default",fn:function(t){var i=t.navigate,o=t.isActive;return[e("li",{staticClass:"nav-item",class:[o&&"router-link-active"],attrs:{id:"analyze-tab",role:"link"},on:{click:i,keypress:function(t){return!t.type.indexOf("key")&&n._k(t.keyCode,"enter",13,t.key,"Enter")?null:i.apply(null,arguments)}}},[e("a",{staticClass:"nav-link is-clickable",class:[o&&"active"],attrs:{href:"javascript:void(0);"}},[e("span",{staticClass:"icon is-small"},[e("i",{staticClass:"dashicons dashicons-edit-page"})]),n._v(" "),e("span",[n._v("Post")])])])]}}])}),n._v(" "),e("router-link",{attrs:{to:"/post-types/page",custom:"",exact:""},scopedSlots:n._u([{key:"default",fn:function(t){var i=t.navigate,o=t.isActive;return[e("li",{staticClass:"nav-item",class:[o&&"router-link-active"],attrs:{id:"analyze-tab",role:"link"},on:{click:i,keypress:function(t){return!t.type.indexOf("key")&&n._k(t.keyCode,"enter",13,t.key,"Enter")?null:i.apply(null,arguments)}}},[e("a",{staticClass:"nav-link is-clickable",class:[o&&"active"],attrs:{href:"javascript:void(0);"}},[e("span",{staticClass:"icon is-small"},[e("i",{staticClass:"dashicons dashicons-edit-page"})]),n._v(" "),e("span",[n._v("Page")])])])]}}])})],1)])])}),[],!1,null,null,null).exports}},n=>{n.O(0,[8495],(()=>{return t=6534,n(n.s=t);var t}));n.O()}]);
//# sourceMappingURL=wp-adminify--admin-columns.min.js.map